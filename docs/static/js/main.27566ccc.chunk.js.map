{"version":3,"sources":["components/wishlistForm/index.js","components/wishlistItem/index.js","dataStore/stubAPI.js","components/wishlistList/index.js","components/filterControls/index.js","App.js","serviceWorker.js","components/itemDetails/index.js","index.js"],"names":["Form","state","name","price","link","quantity","handleNameChange","e","setState","target","value","handlePriceChange","handleLinkChange","handleQuantityChange","increaseQuantity","parseInt","decreaseQuantity","handleSubmit","preventDefault","money","isNaN","props","handleAdd","className","type","placeholder","this","onChange","onClick","Component","WishlistItem","handleModifyQuantity","item","id","removeProduct","handleRemove","data","scope","priority","href","style","products","index","product","lodash","remove","sortPriorities","console","log","last","len","length","uuid","newLen","push","number","change","getProduct","findIndex","array","order","sortBy","filter","c","toLowerCase","search","toSearch","filterProductsByPriceMoreLessThan","filterProductsByText","WishlistList","modifyQuantity","api","handleRemoveWithSorting","totalPrice","wishlistItems","items","map","key","toFixed","handleChange","filterProducts","handlePriceMinChange","handlePriceMaxChange","handleSelect","App","minPrice","maxPrice","addProduct","add","parseFloat","removeItem","diplayedProducts","getAll","sortProducts","Boolean","window","location","hostname","match","ItemDetails","params","handleUpdate","updateProduct","Router","path","component","exact","from","to","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.27566ccc.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class Form extends Component {\r\n    \r\n  state = {name: \"\", price: \"\", link: \"\", quantity: \"1\"}\r\n  \r\n  handleNameChange = (e) => this.setState({name: e.target.value});\r\n  handlePriceChange = (e) => this.setState({price: e.target.value});\r\n  handleLinkChange = (e) => this.setState({link: e.target.value});\r\n  handleQuantityChange = (e) => this.setState({quantity: e.target.value});\r\n  increaseQuantity = (e) => this.setState({quantity: parseInt(this.state.quantity)+1});\r\n  decreaseQuantity = (e) => {\r\n    \r\n    if(parseInt(this.state.quantity) > 1) {\r\n      this.setState({quantity: parseInt(this.state.quantity)-1})\r\n    }\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let money = 0;\r\n    if(!isNaN(parseInt(this.state.price))) {money = this.state.price}\r\n    this.props.handleAdd(this.state.name, money, this.state.link, this.state.quantity);\r\n    this.setState({name: \"\", price: \"\", link: \"\", quantity: \"1\"});\r\n  }\r\n\r\n  render() {\r\n        return (\r\n        <form  className=\"form bg-dark text-light\">\r\n            <h3>Add an item to your wishlist</h3>\r\n            <div className=\"form-group\">\r\n              <input type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Name of item\"\r\n                value= {this.state.name}\r\n                onChange={this.handleNameChange}></input>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Price\"\r\n                value= {this.state.price}\r\n                onChange={this.handlePriceChange}></input>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input type=\"text\"\r\n                  className=\"form-control\"\r\n                placeholder=\"Link\"\r\n                value= {this.state.link}\r\n                onChange={this.handleLinkChange}></input>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-2\">\r\n              <input type=\"button\" value=\"-\" className=\"btn btn-danger\" onClick={this.decreaseQuantity} />\r\n              </div>\r\n\r\n              <div className=\"col-sm-8\">\r\n              <input type=\"text\" className=\"form-control\" value= {this.state.quantity} onChange={this.handleQuantityChange}></input>\r\n              </div>\r\n\r\n              <div className=\"col-sm-2\">\r\n                <input type=\"button\" value=\"+\" className=\"btn btn-success\" onClick={this.increaseQuantity} />\r\n              </div>\r\n\r\n\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\"\r\n            onClick={this.handleSubmit}>Add</button>\r\n          </form>\r\n        );\r\n    }\r\n}","import React, { Component, Fragment } from 'react';\r\n\r\nexport default class WishlistItem extends Component {\r\n    \r\n    \r\n    increaseQuantity = (e) => this.props.handleModifyQuantity(this.props.item.id,1);\r\n    \r\n    decreaseQuantity = (e) => {\r\n            if(this.props.item.quantity > 1) {\r\n                this.props.handleModifyQuantity(this.props.item.id, -1);\r\n            }\r\n        }\r\n\r\n    removeProduct = (e) => {\r\n        this.props.handleRemove(this.props.item.id);  \r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        let data = this.props.item;\r\n        return (\r\n        <Fragment>\r\n            <tr>\r\n            \r\n           \r\n            \r\n            <td scope=\"row\">\r\n            {data.priority}\r\n            </td>\r\n            \r\n            \r\n                <td scope=\"row\">\r\n                <a href={`/item/${data.id}`} style={{\"textDecoration\": \"none\"}} > <button className=\"btn btn-link btn-block\" style={{\"textDecoration\": \"none\", \"color\": \"black\", \"padding\": \"0\"}}>\r\n\r\n                    <div className=\"text-left\">\r\n                        {data.name}\r\n                        </div>\r\n                        </button></a>\r\n            \r\n                </td>\r\n\r\n            <td scope=\"row\">\r\n                <input type=\"button\" value=\"-\" className=\"btn-danger\" onClick={this.decreaseQuantity} />\r\n                {data.quantity}\r\n                <input type=\"button\" value=\"+\" className=\"btn-success\" onClick={this.increaseQuantity} />\r\n            </td>\r\n            <td scope=\"row\">€{data.price}</td>\r\n            <td scope=\"row\"><a target=\"_blank\" href={data.link}><span className=\"glyphicon glyphicon-globe\"></span></a></td>\r\n            <td scope=\"row\"><button type=\"button\" className=\"glyphicon btn-m glyphicon-trash btn-link\" onClick={this.removeProduct} /></td>\r\n            </tr>\r\n\r\n        </Fragment>\r\n          );\r\n      }\r\n  }","import lodash from \"lodash\";\r\nimport uuid from \"uuid\";\r\n\r\nclass StubAPI {\r\n    constructor() {\r\n        this.products = [\r\n            {\r\n                id: \"sfwml1\",\r\n                priority: 1,\r\n                name: \"Steam Controller\",\r\n                price: 54.99,\r\n                link: \"https://store.steampowered.com/app/353370/\",\r\n                quantity: 1\r\n              },\r\n              {\r\n                id: \"sfwml2\",\r\n                priority: 2,\r\n                name: \"Spice&Wolf VR\",\r\n                price: 20.99,\r\n                link: \"https://store.steampowered.com/app/1065970\",\r\n                quantity: 1\r\n              },\r\n              {\r\n                id: \"sfwml3\",\r\n                priority: 3,\r\n                name: \"Rocket League on Nintendo Switch\",\r\n                price: 19.99,\r\n                link: \"https://www.nintendo.com/games/detail/rocket-league-switch/\",\r\n                quantity: 1\r\n              },\r\n              {\r\n                id: \"sfwml4\",\r\n                priority: 4,\r\n                name: \"DualShock 4 Wireless Controller for PlayStation 4 - Magma Red\",\r\n                price: 44.10,\r\n                link: \"https://www.amazon.com/DualShock-Wireless-Controller-PlayStation-Magma-4/dp/B01MD19OI2?pf_rd_p=190167bc-8caf-4fc0-8d35-69c23fc562c8&pd_rd_wg=RICuo&pf_rd_r=STERBJFCFYC491G74A7T&ref_=pd_gw_unk&pd_rd_w=Sl0RK&pd_rd_r=5b1da968-da23-418c-969c-4376f15cdb96&th=1\",\r\n                quantity: 1\r\n              }\r\n        ];\r\n    }\r\n\r\n    sortPriorities() {\r\n      let index = 1;\r\n      for(let product in this.products) {\r\n        this.products[product].priority = this.products[product].priority === index ? this.products[product].priority : index;\r\n        index++;\r\n      }\r\n    }\r\n\r\n    getAll() {\r\n        return this.products;\r\n    }\r\n\r\n    remove(id) {\r\n      lodash.remove(this.products, {id: id});\r\n      this.sortPriorities();\r\n      console.log(\"removed item with an id of: \" + id);\r\n\r\n    }\r\n\r\n    add(name, price, link, quantity) {\r\n        let priority = 1;\r\n        let last = lodash.last(this.products);\r\n        if (last) { //if last exists, else leave it as it is\r\n          priority = last.priority + 1;\r\n        }\r\n        let len = this.products.length;\r\n        let id = uuid();\r\n        let newLen = this.products.push({\r\n        id,\r\n        priority,\r\n        name,\r\n        price,\r\n        link,\r\n        quantity\r\n        });\r\n        console.log(\"added item \" + name + \" with an id of: \" + id);\r\n        return newLen > len; //return true if the length of the new list is bigger than the old list\r\n    }\r\n\r\n    modifyQuantity(id, number) {\r\n      let change = this.getProduct(id).quantity;\r\n      this.getProduct(id).quantity = parseInt(this.getProduct(id).quantity) + number; \r\n      if(change !== this.getProduct(id).quantity) return true;\r\n    }\r\n\r\n    getProduct(id) {\r\n        let index = lodash.findIndex(this.products, product => product.id === id);\r\n        let result = index !== -1 ? this.products[index] : null;\r\n        return result;\r\n    }\r\n\r\n\r\n    sortProducts(array, order) {\r\n      return lodash.sortBy(array, [order]);\r\n    }\r\n\r\n\r\n    filterProductsByText(array, type, filter) {\r\n      if(filter === \"\") {\r\n        return array;\r\n      }\r\n      else {\r\n        return array.filter(c => {\r\n          const toSearch = `${c[type]}`;\r\n          return toSearch.toLowerCase().search(filter) !== -1;\r\n          });\r\n      }\r\n    }\r\n\r\n    filterProductsByPriceMoreLessThan(array, type, filter) {\r\n      if(isNaN(filter)) {\r\n\r\n        return array;\r\n      }\r\n      else {\r\n        return array.filter(c => {\r\n          const toSearch = `${c.price}`;\r\n          if(type === \"minPrice\") {\r\n            return toSearch > filter;\r\n          }\r\n          else if(type===\"maxPrice\") {\r\n            return toSearch < filter;\r\n          }\r\n          else return false;\r\n          });\r\n        \r\n      }\r\n    }\r\n\r\n    filterProducts(array, type, filter) { \r\n      if(type === \"minPrice\" || type === \"maxPrice\") {\r\n        return this.filterProductsByPriceMoreLessThan(array, type, filter);\r\n      }\r\n      else {\r\n        return this.filterProductsByText(array, type, filter);\r\n      }\r\n    }\r\n\r\n    updateProduct(id, name, price, link, quantity){\r\n      this.getProduct(id).name = name;\r\n      this.getProduct(id).price = price;\r\n      this.getProduct(id).link = link;\r\n      this.getProduct(id).quantity = quantity;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default new StubAPI();","import React, { Component } from 'react';\r\nimport WishlistItem from '../wishlistItem/';\r\nimport api from '../../dataStore/stubAPI'\r\n\r\nexport default class WishlistList extends Component {\r\n    modifyQuantity = (id, number) => {\r\n        api.modifyQuantity(id,number);\r\n        this.setState({});\r\n    };\r\n\r\n    removeProduct= (id) => {\r\n        this.props.handleRemoveWithSorting(id);\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        let totalPrice = 0;\r\n\r\n        const wishlistItems = this.props.items.map(c => (\r\n            totalPrice += (c.price * c.quantity),\r\n            <WishlistItem key={c.id} item={c} handleModifyQuantity={this.modifyQuantity} handleRemove={this.removeProduct}/>\r\n        ));\r\n\r\n\r\n        totalPrice = totalPrice.toFixed(2);\r\n\r\n        return (\r\n\r\n        <table className=\"table table-hover\">\r\n            <thead>\r\n            <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Quantity</th>\r\n            <th scope=\"col\">Price</th>\r\n            <th scope=\"col\">Link</th>\r\n            <th scope=\"col\">Remove</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n                {wishlistItems}\r\n\r\n                <tr>\r\n            <td scope=\"row\"></td>\r\n            <td scope=\"row\">No. of items: {this.props.items.length} item(s)</td>\r\n            <td scope=\"row\"></td>\r\n            <th scope=\"row\">Total:</th>\r\n            <td scope=\"row\">€{totalPrice}</td>\r\n            </tr>\r\n            </tbody>\r\n            </table>\r\n\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Form extends Component {\r\n    \r\n  handleChange = (e, type, value) => {\r\n    e.preventDefault();\r\n    this.props.filterProducts(type, value);\r\n};\r\n\r\n  handleNameChange = (e) => this.handleChange(e, \"name\", e.target.value);\r\n  handlePriceMinChange = (e) => this.handleChange(e, \"minPrice\", e.target.value);\r\n  handlePriceMaxChange = (e) => this.handleChange(e, \"maxPrice\", e.target.value);\r\n  handleSelect = (e) => this.handleChange(e, \"order\", e.target.value);\r\n\r\n  render() {\r\n        return (\r\n        <form  className=\"form bg-dark text-light\">\r\n            <div className=\"row\">\r\n            <div className=\"form-group col-sm-3\">\r\n            <b>Filters</b>\r\n              <input type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Name of item\"\r\n                onChange={this.handleNameChange}></input>\r\n            </div>\r\n            <div className=\"form-group col-sm-1\">\r\n              <div>min:</div>\r\n              <input type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"€    Min Price\"\r\n                onChange={this.handlePriceMinChange} />\r\n            </div>\r\n            <div className=\"form-group col-sm-1\"> \r\n            <div>max:</div>\r\n              <input type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"€    Max Price\"\r\n                onChange={this.handlePriceMaxChange}></input>\r\n            </div>\r\n            <div className=\"form-group col-sm-2\"> \r\n            <div>order by:</div>\r\n              <select className=\"form-control\" name=\"orderBy\" onChange={this.handleSelect}>\r\n                <option value=\"priority\">Priority</option>\r\n                <option value=\"name\">Alphabetical</option>\r\n                <option value=\"price\">Price</option>\r\n              </select>\r\n            </div>\r\n            </div>\r\n          </form>\r\n        );\r\n    }\r\n}","import React, { Component, Fragment } from 'react';\r\nimport './App.css';\r\nimport Form from './components/wishlistForm';\r\nimport WishlistList from './components/wishlistList';\r\nimport api from './dataStore/stubAPI'\r\nimport Filter from './components/filterControls'\r\n\r\nexport default class App extends Component {\r\n\r\n  state = {name: \"\", minPrice: \"\", maxPrice: \"\", order: \"priority\"}\r\n\r\n  addProduct = (name,price,link,quantity) => {\r\n    api.add(name,parseFloat(price),link,quantity);\r\n    this.setState({name: this.state.name, minPrice: this.state.minPrice, maxPrice: this.state.maxPrice, order: this.state.order});\r\n  };\r\n\r\n  removeItem = (id) => {\r\n    api.remove(id);\r\n    this.setState({name: this.state.name, minPrice: this.state.minPrice, maxPrice: this.state.maxPrice, order: this.state.order});\r\n  }\r\n\r\n  filterProducts = (type, value) => {\r\n    \r\n    if(type === \"name\") {\r\n      this.setState({name: value, minPrice: this.state.minPrice, maxPrice: this.state.maxPrice, order: this.state.order})\r\n    }\r\n    else if(type === \"minPrice\") {\r\n      this.setState({name: this.state.name, minPrice: value, maxPrice: this.state.maxPrice, order: this.state.order})\r\n    }\r\n    else if(type === \"maxPrice\") {\r\n      this.setState({name: this.state.name, minPrice: this.state.minPrice, maxPrice: value, order: this.state.order})\r\n    }\r\n    else if(type === \"order\") {\r\n      this.setState({name: this.state.name, minPrice: this.state.minPrice, maxPrice: this.state.maxPrice, order: value})\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n\r\n    let diplayedProducts = api.getAll();\r\n    diplayedProducts = api.filterProducts(diplayedProducts, \"name\" ,this.state.name);\r\n    diplayedProducts = api.filterProducts(diplayedProducts, \"minPrice\",parseFloat(this.state.minPrice));\r\n    diplayedProducts = api.filterProducts(diplayedProducts, \"maxPrice\",parseFloat(this.state.maxPrice));\r\n    diplayedProducts = api.sortProducts(diplayedProducts, this.state.order);\r\n\r\n    return (\r\n    <Fragment>\r\n      <h1 className=\"text-center\"><a href=\"/\">Shopping Wishlist</a></h1>\r\n\r\n      <hr/>\r\n      \r\n      <div className=\"container-fluid\">\r\n      \r\n        <div className=\"row\">\r\n          <div className=\"col-md-1\"></div>\r\n          \r\n          <div className=\"col-md-3\">\r\n              <Form handleAdd={this.addProduct}/>\r\n          </div>\r\n            \r\n          <div className=\"col-md-8\">\r\n          <Filter filterProducts={this.filterProducts} />\r\n            <WishlistList items = {diplayedProducts} handleRemoveWithSorting={this.removeItem} />\r\n          </div>\r\n        </div>    \r\n      </div>\r\n      \r\n    </Fragment>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Component, Fragment} from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport api from '../../dataStore/stubAPI'\r\n\r\nexport default class ItemDetails extends Component {\r\n\r\n  item = api.getProduct(this.props.match.params.id);\r\n  state = {name: this.item.name, price: this.item.price, link: this.item.link, quantity: this.item.quantity};\r\n  \r\n  handleNameChange = (e) => this.setState({name: e.target.value});\r\n  handlePriceChange = (e) => this.setState({price: e.target.value});\r\n  handleLinkChange = (e) => this.setState({link: e.target.value});\r\n  handleQuantityChange = (e) => this.setState({quantity: e.target.value});\r\n\r\n\r\n  handleUpdate = (e) => {\r\n    e.preventDefault();\r\n    let money = 0;\r\n    if(!isNaN(parseInt(this.state.price))) {money = this.state.price}\r\n    api.updateProduct(this.item.id, this.state.name, money, this.state.link, this.state.quantity);\r\n    this.setState({name: this.item.name, price: this.item.price, link: this.item.link, quantity: this.item.quantity});\r\n  }\r\n\r\n  render() {\r\n   return (\r\n    <Fragment>\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-4\"></div>\r\n        <div className=\"col-sm-4\">\r\n\r\n        <h3> Item id: {this.item.id} </h3>\r\n        \r\n        \r\n\r\n        <form  className=\"form bg-dark text-light\">\r\n            <h3>Edit {this.item.name}</h3>\r\n            <div className=\"form-group\">\r\n              <input type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Name of item\"\r\n                value= {this.state.name}\r\n                onChange={this.handleNameChange}></input>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Price\"\r\n                value= {this.state.price}\r\n                onChange={this.handlePriceChange}></input>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input type=\"text\"\r\n                  className=\"form-control\"\r\n                placeholder=\"Link\"\r\n                value= {this.state.link}\r\n                onChange={this.handleLinkChange}></input>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-2\">\r\n              <input type=\"button\" value=\"-\" className=\"btn btn-danger\" onClick={this.decreaseQuantity} />\r\n              </div>\r\n\r\n              <div className=\"col-sm-8\">\r\n              <input type=\"text\" className=\"form-control\" value= {this.state.quantity} onChange={this.handleQuantityChange}></input>\r\n              </div>\r\n\r\n              <div className=\"col-sm-2\">\r\n                <input type=\"button\" value=\"+\" className=\"btn btn-success\" onClick={this.increaseQuantity} />\r\n              </div>\r\n\r\n\r\n            </div>\r\n              <button type=\"submit\" className=\"btn btn-success\"\r\n            onClick={this.handleUpdate}>Update</button>\r\n          </form>\r\n\r\n          <a href=\"/home\"><button className=\"btn btn-primary text-center\">Go Back</button></a>\r\n\r\n          </div>\r\n          <div className=\"col-sm-4\"></div>\r\n\r\n          </div>\r\n          \r\n    </Fragment>\r\n  );\r\n  }\r\n}","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\nimport ItemDetails from \"./components/itemDetails/\"\n\n\n\nclass Router extends Component {\n    render() {\n        return (\n           <BrowserRouter>\n            <div className=\"jumbotron\">\n              <div className=\"container-fluid \">\n                <Switch>\n                  <Route path=\"/item/:id\" component={ItemDetails} />\n                  <Route exact path=\"/\" component={App} />\n                  <Redirect from=\"*\" to=\"/\" />\n                </Switch>\n              </div>\n            </div>\n          </BrowserRouter>\n        );\n      }\n}\n\n\n\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change \n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}